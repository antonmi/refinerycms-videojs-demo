<label>Files</label>
<div id='file_fields'>
  <%= f.fields_for :video_files do |v| %>
      <div class="parent">
        <label class="inline">
          <%= v.radio_button :use_external, false, {:class => "use_file"}.merge(v.object.use_external ? {} : {:checked => true}) %>
          <span>Use file</span>
        </label>
        <label class="inline">
          <%= v.radio_button :use_external, true, {:class => "use_external"}.merge(v.object.use_external ? {:checked => true} : {}) %>
          <span>Use external source</span>
        </label>

        <div class='field'>
          <div class="use_file" <%= "style='display: none;'" if v.object.use_external %>>
            <% if v.object.file.present? %>
                <% if v.object.url %>
                    <%= link_to(t('.download_current'), v.object.url,
                                :title => v.object.file_name) %>
                    <em><%= t('.or') %> </em><%= t('.replace') %>
                <% else %>
                    <span>Add File</span>
                <% end %>

                <%= v.file_field :file %>

            <% else %>
                <span>Add File</span>
                <%= v.file_field :file, :required => true %>
            <% end %>
          </div>
          <div class="use_external" <%= "style='display: none;'" unless v.object.use_external %>>
            <span>Link to source</span>
            <%= v.text_field :external_url, {}.merge(v.object.use_external ? {:required => true} : {}) %>
          </div>

        </div>
        <a href='#' onclick="add_field($(this)); return false" class="add_field" style='display: none'><%= refinery_icon_tag("add.png") %>
          <div class="inline">Add source</div>
        </a>  <% if v.object.persisted?  %>
            <%= link_to(refinery_icon_tag("delete.png"), refinery.videos_admin_video_file_path(v.object),
                        :class => "cancel confirm-delete",
                        :title => t('.delete'),
                        :confirm => t('message', :scope => 'refinery.admin.delete', :title => 'file'),
                        :method => :delete) %>

            <% end %>
            <a href='#' onclick="remove_field($(this)); return false" class="remove_field" style='display: none'><%= refinery_icon_tag("delete.png")%>
              <div class="inline">Delete source</div>
        </a>
      </div>
  <% end %>
</div>

<div class='field' id='maximum_file_size'>
  <label>
    <%= t('.maximum_file_size', :bytes => number_to_human_size(Refinery::Videos.max_file_size)) %>
  </label>
</div>

<script type="text/javascript">
    function radio_control(){
        $('input.use_external').on('change', function(){
            if ($(this).is(':checked')) {
                var $parent = $(this).parents('div.parent');
                $parent.find('div.use_external').show();
                $parent.find('div.use_file').hide();
                $parent.find('.use_file input').removeAttr('required');
                $parent.find('.use_external input').attr('required', 'required');
            }
        });
        $('input.use_file').on('change', function(){
            if ($(this).is(':checked')) {
                var $parent = $(this).parents('div.parent');
                $parent.find('div.use_external').hide();
                $parent.find('div.use_file').show();
                $parent.find('.use_file input').attr('required', 'required');
                $parent.find('.use_external input').removeAttr('required');
            }
        });
    }

    function add_field(plus){
        var $div = plus.parents('div.parent').clone();
        plus.parents('div.parent').find('a.add_field').hide();
        plus.parents('div.parent').find('a.remove_field').show();
        $div.find('a.remove_field').show();
        var $inputs = $div.find('input');
        var date = Number(new Date)
        $.each($inputs, function(){
            var new_name = $(this).attr('name').replace(/\[\d+\]/,'['+date+']');
            $(this).attr('name', new_name);
            var new_id = $(this).attr('id').replace(/_\d+_/,'_'+date+'_');
            $(this).attr('id', new_id);
        });
        $('#file_fields').append($div);
        radio_control();
    }

    function remove_field(minus){
        minus.parents('div.parent').remove();
        $('div.parent').last().find('a.add_field').show();
        if ($('div.parent').length > 1) {
            $('div.parent').last().find('a.remove_field').show();
        } else {
            $('div.parent').find('a.remove_field').hide();
        }
    }

    $(function(){
        radio_control();
        $('div.parent').last().find('a.add_field').show();
        $without_first = $('div.parent').not($('div.parent').first());
        if ($('div.parent').length > 1) {
            $('div.parent').find('a.remove_field').show();
        }
    })
</script>